package templates

type ChatMessageParams struct {
	Id           string
	UserMessage  string
	Model        string
}

templ InitChatMessage(params ChatMessageParams) {
	<div id="chat-messages" hx-swap-oob="beforeend">
		<div class="chat-message from-user">
			<div class="chat-message-user">user:</div>
			{ params.UserMessage }
		</div>
		<div id={ "response-" + params.Id } class="chat-message from-model">
			<div class="chat-message-header">
				<div class="chat-message-model">{ params.Model }:</div>
				<svg
					class="useful-chat-icon"
					hx-post={ "http://127.0.0.1:8090/chat/useful/" + params.Id }
					hx-trigger="click consume"
					hx-target="this"
					hx-swap="outerHTML"
					xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"
				><path d="m6.516 14.323-1.49 6.452a.998.998 0 0 0 1.529 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082a1 1 0 0 0-.59-1.74l-5.701-.454-2.467-5.461a.998.998 0 0 0-1.822 0L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.214 4.107zm2.853-4.326a.998.998 0 0 0 .832-.586L12 5.43l1.799 3.981a.998.998 0 0 0 .832.586l3.972.315-3.271 2.944c-.284.256-.397.65-.293 1.018l1.253 4.385-3.736-2.491a.995.995 0 0 0-1.109 0l-3.904 2.603 1.05-4.546a1 1 0 0 0-.276-.94l-3.038-2.962 4.09-.326z"></path>
				</svg>		
			</div>
			<div id={ "response-content-" + params.Id }></div>
		</div>
	</div>
}

templ ChatStreamChunk(id string, chunk string) {
	<div id={ "response-content-" + id } hx-swap-oob="beforeend">{ chunk } </div>
}

type LoadedMessageParams struct {
	Id      string `db:"id" json:"id"`
	Message string `db:"message" json:"message"`
	Model   string `db:"model" json:"model"`
	// Timestamp int
	Sender   string `db:"sender" json:"sender"`
	ThreadId string `db:"thread_id" json:"thread_id"`
	Useful   bool   `db:"useful" json:"useful"`
}

templ LoadedThread(threadTitle string, messages []LoadedMessageParams) {
	<div id="thread-title" hx-swap-oob="innerHTML">
		{ threadTitle }
	</div>
	for _, message := range messages {
		if message.Sender == "human" {
			<div class="chat-message from-user">
				<div class="chat-message-user"><i>user:</i></div>
				{ message.Message }
			</div>
		} else if message.Sender == "model" {
			<div id={ "response-" + message.Id } class="chat-message from-model">
				<div class="chat-message-header">
					<div class="chat-message-model"><i>{ message.Model }:</i></div>
					if message.Useful {
						<svg
							class="useful-chat-icon"
							hx-post={ "http://127.0.0.1:8090/chat/useful/" + message.Id }
							hx-trigger="click consume"
							hx-target="this"
							hx-swap="outerHTML"
							xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"
						><path d="M21.947 9.179a1.001 1.001 0 0 0-.868-.676l-5.701-.453-2.467-5.461a.998.998 0 0 0-1.822-.001L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.213 4.107-1.49 6.452a1 1 0 0 0 1.53 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082c.297-.268.406-.686.278-1.065z"></path>
						</svg>
					} else {
						<svg
							class="useful-chat-icon"
							hx-post={ "http://127.0.0.1:8090/chat/useful/" + message.Id }
							hx-trigger="click consume"
							hx-target="this"
							hx-swap="outerHTML"
							xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"
						><path d="m6.516 14.323-1.49 6.452a.998.998 0 0 0 1.529 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082a1 1 0 0 0-.59-1.74l-5.701-.454-2.467-5.461a.998.998 0 0 0-1.822 0L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.214 4.107zm2.853-4.326a.998.998 0 0 0 .832-.586L12 5.43l1.799 3.981a.998.998 0 0 0 .832.586l3.972.315-3.271 2.944c-.284.256-.397.65-.293 1.018l1.253 4.385-3.736-2.491a.995.995 0 0 0-1.109 0l-3.904 2.603 1.05-4.546a1 1 0 0 0-.276-.94l-3.038-2.962 4.09-.326z"></path>
						</svg>		
					}
				</div>
				<div id={ "response-content-" + message.Id }>{ message.Message }</div>
			</div>
		}
	}
}

templ NoApisAvailable() {
	<div class="initial-window" id="initial-window"></div>
}

templ UsefulnessResponse(messageId string, useful bool) {	
	if useful {
		<p
			_="on load wait 2s transition opacity to 0 then remove me"
			class="useful-message-message"
		>
			Message marked as useful
		</p>
		<svg
			class="useful-chat-icon"
			hx-post={ "http://127.0.0.1:8090/chat/useful/" + messageId }
			hx-trigger="click consume"
			hx-target="this"
			hx-swap="outerHTML"
			xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"
		><path d="M21.947 9.179a1.001 1.001 0 0 0-.868-.676l-5.701-.453-2.467-5.461a.998.998 0 0 0-1.822-.001L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.213 4.107-1.49 6.452a1 1 0 0 0 1.53 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082c.297-.268.406-.686.278-1.065z"></path>
		</svg>
	} else {
		<p
			_="on load wait 2s transition opacity to 0 then remove me"
			class="useful-message-message"
		>
			Message marked as not useful
		</p>
		<svg
			class="useful-chat-icon"
			hx-post={ "http://127.0.0.1:8090/chat/useful/" + messageId }
			hx-trigger="click consume"
			hx-target="this"
			hx-swap="outerHTML"
			xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"
		><path d="m6.516 14.323-1.49 6.452a.998.998 0 0 0 1.529 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082a1 1 0 0 0-.59-1.74l-5.701-.454-2.467-5.461a.998.998 0 0 0-1.822 0L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.214 4.107zm2.853-4.326a.998.998 0 0 0 .832-.586L12 5.43l1.799 3.981a.998.998 0 0 0 .832.586l3.972.315-3.271 2.944c-.284.256-.397.65-.293 1.018l1.253 4.385-3.736-2.491a.995.995 0 0 0-1.109 0l-3.904 2.603 1.05-4.546a1 1 0 0 0-.276-.94l-3.038-2.962 4.09-.326z"></path>
		</svg>		
	}	
}

templ ActiveChat() {
	<div class="chat-window" id="chat-window">
		<div class="chat-title-header">
			<div class="chat-header-left">
				<svg
					class="threads-icon"
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					style="
                        fill: rgba(0, 0, 0, 1);
                        transform:;
                        msfilter:;
                    "
				>
					<path
						d="M4 18h2v4.081L11.101 18H16c1.103 0 2-.897 2-2V8c0-1.103-.897-2-2-2H4c-1.103 0-2 .897-2 2v8c0 1.103.897 2 2 2z"
					></path>
					<path d="M20 2H8c-1.103 0-2 .897-2 2h12c1.103 0 2 .897 2 2v8c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2z"></path>
				</svg>
				<p id="thread-title" class="thread-title">
					Create or select thread from the sidebar
				</p>
			</div>
			<div
				id="chat-api-select"
				class="chat-api-select"
				hx-get="http://127.0.0.1:8090/apis"
				hx-trigger="load, refresh-apis from:body"
				hx-target="this"
				hx-swap="innerHTML"
			></div>
		</div>
		<!-- fill message history here, stream responses -->
		<div class="messages-container" id="chat-messages"></div>
	</div>
	<div
		id="input-container"
		class="input-container"
		hx-ext="ws"
		ws-connect="http://127.0.0.1:8090/ws"
		hx-on:htmx:ws-after-send="document.querySelector('#sender-form').reset()"
	>
		<form
			id="sender-form"
			class="send-message-form"
			ws-send
			hx-trigger="keyup[keyCode==13]"
			hx-on::after-request="console.log('after')"
		>
			<input id="thread-id-chat" name="thread-id-chat" type="hidden"/>
			<textarea
				disabled
				form="sender-form"
				id="message-input"
				name="new-message"
				class="message-input"
				placeholder="Enter prompt..."
			></textarea>
			<button ws-send class="send-message-button">
				Send
			</button>
		</form>
	</div>
}
