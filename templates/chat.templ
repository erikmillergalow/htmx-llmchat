package templates

type ChatMessageParams struct {
    Id string
    ModelMessage string
    UserMessage string
//    Model string
//    Timestamp int
//    Tags []string
    Sender string
}

templ ChatMessage(params ChatMessageParams) {
    <div id="chat-messages" hx-swap-oob="beforeend">
        <div class="chat-message from-user">
            { params.UserMessage }
        </div>
        <div id={ "response-" + params.Id } class="chat-message from-model">
        </div>
    </div>
}

templ ChatStreamChunk(id string, chunk string) {
    <div id={"response-" + id } hx-swap-oob="beforeend"> { chunk } </div>
}

type LoadedMessageParams struct {
    Id string `db:"id" json:"id"`
    Message string `db:"message" json:"message"`
//    Model string 
//    Timestamp int
//    Tags []string
    Sender string `db:"sender" json:"sender"`
}

templ LoadedThread(messages []LoadedMessageParams) {
   for _, message := range messages {
       if (message.Sender == "human") {
            <div class="chat-message from-user">
                { message.Message }
            </div>
       } else if (message.Sender == "model") {
            <div id={ message.Id } class="chat-message from-model">
                { message.Message }
            </div>
       }
   }
}
