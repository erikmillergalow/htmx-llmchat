// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"
import "strings"

import (
	"fmt"
	"strconv"
)

type SideBarMenuParams struct {
	OpenAIKey string `db:"openai_key" json:"openai_key"`
	GroqKey   string `db:"groq_key" json:"groq_key"`
}

func SideBarMenu(params SideBarMenuParams) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"model-stats\" hx-get=\"http://127.0.0.1:8090/stats\" hx-target=\"this\" hx-swap=\"innerHTML\" hx-trigger=\"load\"></div><div class=\"theme-config\"><div class=\"theme-color-section\"><label for=\"sidebar-color\">Sidebar Color:</label> <input id=\"sidebar-color\" class=\"theme-input\" type=\"color\" value=\"#b1b7bf\"></div><div class=\"theme-color-section\"><label for=\"sidebar-item-border-color\">Sidebar Item Border Color:</label> <input id=\"sidebar-item-border-color\" class=\"theme-input\" type=\"color\" value=\"#666666\"></div><div class=\"theme-color-section\"><label for=\"sidebar-hover-color\">Sidebar Hover Color:</label> <input id=\"sidebar-hover-color\" class=\"theme-input\" type=\"color\" value=\"#9a9fa6\"></div><div class=\"theme-color-section\"><label for=\"font-color\">Font Color:</label> <input id=\"font-color\" class=\"theme-input\" type=\"color\" value=\"#000000\"></div><div class=\"theme-color-section\"><label for=\"icon-color\">Icon Color:</label> <input id=\"icon-color\" class=\"theme-input\" type=\"color\" value=\"#000000\"></div><div class=\"theme-color-section\"><label for=\"icon-hover-color\">Icon Hover Color:</label> <input id=\"icon-hover-color\" class=\"theme-input\" type=\"color\" value=\"#7a8086\"></div><div class=\"theme-color-section\"><label for=\"add-tag-color\">Add Tag Color:</label> <input id=\"add-tag-color\" class=\"theme-input\" type=\"color\" value=\"gray\"></div><div class=\"theme-color-section\"><label for=\"tag-hover-color\">Tag Hover Color:</label> <input id=\"tag-hover-color\" class=\"theme-input\" type=\"color\" value=\"#b1c7ba\"></div><div class=\"theme-color-section\"><label for=\"text-input-color\">Text Input Color:</label> <input id=\"text-input-color\" class=\"theme-input\" type=\"color\" value=\"#ffffff\"></div><div class=\"theme-color-section\"><label for=\"send-button-color\">Send Button Color:</label> <input id=\"send-button-color\" class=\"theme-input\" type=\"color\" value=\"#ededf0\"></div><div class=\"theme-color-section\"><label for=\"gutter-gradient-color\">Gutter Gradient Color:</label> <input id=\"gutter-gradient-color\" class=\"theme-input\" type=\"color\" value=\"#67a843\"></div><div class=\"theme-color-section\"><label for=\"chat-background-color\">Chat Background Color:</label> <input id=\"chat-background-color\" class=\"theme-input\" type=\"color\" value=\"#b1c7ba\"></div><div class=\"theme-color-section\"><label for=\"chat-items-border-color\">Chat Items Border Color:</label> <input id=\"chat-items-border-color\" class=\"theme-input\" type=\"color\" value=\"#666666\"></div><div class=\"theme-color-section\"><label for=\"user-message-color\">User Message Color:</label> <input id=\"user-message-color\" class=\"theme-input\" type=\"color\" value=\"#c0d0c7\"></div><div class=\"theme-color-section\"><label for=\"model-message-color\">Model Message Color:</label> <input id=\"model-message-color\" class=\"theme-input\" type=\"color\" value=\"#b2c1b8\"></div><div class=\"theme-color-section\"><label for=\"chat-error-color\">Chat Error Color:</label> <input id=\"chat-error-color\" class=\"theme-input\" type=\"color\" value=\"#c68e8e\"></div><div class=\"theme-color-section\"><label for=\"disabled-chat-input\">Disabled Chat Input:</label> <input id=\"disabled-chat-input\" class=\"theme-input\" type=\"color\" value=\"#b1f7ba\"></div><div class=\"theme-color-section\"><label for=\"status-response-color\">Status Response Color:</label> <input id=\"status-response-color\" class=\"theme-input\" type=\"color\" value=\"#e6f0f0\"></div><div class=\"theme-color-section\"><label for=\"scrollbar-color\">Scrollbar Color:</label> <input id=\"scrollbar-color\" class=\"theme-input\" type=\"color\" value=\"#666666\"></div><div class=\"theme-color-section\"><label for=\"timestamp-color\">Timestamp Color:</label> <input id=\"timestamp-color\" class=\"theme-input\" type=\"color\" value=\"#393939\"></div><div class=\"theme-color-section\"><label for=\"active-graph-color\">Active Graph Color:</label> <input id=\"active-graph-color\" class=\"theme-input\" type=\"color\" value=\"#b1c7ba\"></div><div class=\"theme-color-section\"><label for=\"graph-background-color\">Graph Background Color:</label> <input id=\"graph-background-color\" class=\"theme-input\" type=\"color\" value=\"#666666\"></div><div class=\"theme-buttons\"><button id=\"reset-theme-button\" class=\"reset-theme-button\">Reset theme</button></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func percentStyle(percent float64) templ.CSSClass {
	var templ_7745c5c3_CSSBuilder strings.Builder
	templ_7745c5c3_CSSBuilder.WriteString(string(templ.SanitizeCSS(`width`, fmt.Sprintf("%f%%", percent*100.0))))
	templ_7745c5c3_CSSBuilder.WriteString(`border-radius:5px;`)
	templ_7745c5c3_CSSBuilder.WriteString(`height:8px;`)
	templ_7745c5c3_CSSBuilder.WriteString(`background-color:var(--active-graph-color);`)
	templ_7745c5c3_CSSID := templ.CSSID(`percentStyle`, templ_7745c5c3_CSSBuilder.String())
	return templ.ComponentCSSClass{
		ID:    templ_7745c5c3_CSSID,
		Class: templ.SafeCSS(`.` + templ_7745c5c3_CSSID + `{` + templ_7745c5c3_CSSBuilder.String() + `}`),
	}
}

func ModelStatsViewer(sortedKeys []string, total map[string]int, useful map[string]int, percent map[string]float64) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		for _, model := range sortedKeys {
			if model != "error" && model != "" && useful[model] > 0 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"model-stats-item\"><p class=\"model-stats-title\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(model)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/menus.templ`, Line: 154, Col: 52}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p><div class=\"model-stats-row\"><p class=\"model-stats-text\">Useful messages: </p>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if _, ok := useful[model]; ok {
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<p class=\"model-stats-text\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var4 string
					templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(useful[model]))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/menus.templ`, Line: 158, Col: 81}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<p class=\"model-stats-text\">0</p>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"model-stats-row\"><p class=\"model-stats-text\">Total messages: </p><p class=\"model-stats-text\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(total[model]))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/menus.templ`, Line: 165, Col: 76}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></div><div style=\"background-color: var(--graph-background-color); width: 100%; border-radius: 5px; height: 8px; margin-top: 0.25rem;\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var6 = []any{percentStyle(percent[model])}
				templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var6...)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var6).String()))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func SettingsUpdated() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var7 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var7 == nil {
			templ_7745c5c3_Var7 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<p class=\"update-alert\" _=\"on load wait 2s remove me\">Settings updated successfully!</p>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func SearchMenu(tagParams []TagParams, models []string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var8 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var8 == nil {
			templ_7745c5c3_Var8 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"side-bar-menu\"><form hx-post=\"http://127.0.0.1:8090/search\" hx-target=\"#search-results\" hx-swap=\"innerHTML\" id=\"side-bar-menu\" class=\"search-menu\"><div class=\"search-text-row\"><label class=\"search-input-label\">Search:</label> <input name=\"search-input\" class=\"search-input\"></div><select class=\"search-filter\" name=\"tag\"><option value=\"any\">All tags</option> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, tag := range tagParams {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(tag.Id))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(tag.Value)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/menus.templ`, Line: 196, Col: 57}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</select> <select class=\"search-filter\" name=\"model\"><option value=\"any\">All used models</option> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, model := range models {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(model))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(model)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/menus.templ`, Line: 203, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</select> <select class=\"search-filter\" name=\"useful\"><option value=\"any\">Any usefulness</option> <option value=\"useful\">Only threads with useful messages</option> <option value=\"not-useful\">Only threads without useful messages</option></select> <button class=\"submit-search-button\">Search</button></form><div id=\"search-results\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
