package templates

import (
    "github.com/pocketbase/pocketbase/tools/types"
)

type ThreadListEntryParams struct {
    Id string `db:"id" json:"id"`
    Title string `db:"thread_title" json:"thread_title"`
    LastMessage string `db:"last_message" json:"last_message"`
    LastMessageTimestamp types.DateTime `db:"last_message_timestamp" json:"last_message_timestamp"`
    Created types.DateTime `db:"created" json:"created"`
    Model string `db:"model" json:"model"`
}

templ ThreadTitleEditor(id string, currentTitle string) {
    <input
        hx-put={ "http://127.0.0.1:8090/thread/title/" + id }
        hx-trigger="blur, keyup[keyCode==13]"
        hx-target="this"
        hx-swap="outerHTML"
        class="title-edit"
        type="text"
        placeholder="Enter title..."
        name="title"
        autofocus
        onfocus="this.select();"
        value={ currentTitle }
    ></input>
}

templ ThreadTitle(id string, title string) {
    <div
        hx-trigger="click consume"
        hx-get={ "http://127.0.0.1:8090/thread/title/" + id }
        hx-target="this"
        hx-swap="outerHTML"
    >
        <h3 class="thread-entry-title">
            { title }
        </h3>
    </div>
}

templ ThreadTitleUpdate(id string, title string) {
    @ThreadTitle(id, title)
    @OobTextSwap("thread-title", title)
}

templ OobTextSwap(id string, value string) {
   <div id={ id } hx-swap-oob="innerHTML">{ value }</div>
}

templ LastMessageTimestamp(threadId string, messageId string, time types.DateTime) {
    <div 
        id={ "last-updated-" + threadId }
        hx-swap-oob="innerHTML"
        message-id={ messageId }
    >
        Updated at: { types.DateTime.String(time) }
    </div>
}

templ DeleteThreadMessage() {
    <p
        class="delete-thread-status"
        _={ "on load wait 2s transition opacity to 0 then remove me " +
            "init add @disabled to #message-input " +
            "set $thread_id to "+ "\" " +
            "set #thread-id-chat.value to " + "\" " }
    >
        Thread deleted...
    </p>
    <div class="chat-window" id="chat-window" hx-swap-oob="outerHTML">
		<div class="chat-title-header">
			<div class="chat-header-left">
				<svg
					class="threads-icon"
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					style="
                        fill: rgba(0, 0, 0, 1);
                        transform:;
                        msfilter:;
                    "
				>
					<path
						d="M4 18h2v4.081L11.101 18H16c1.103 0 2-.897 2-2V8c0-1.103-.897-2-2-2H4c-1.103 0-2 .897-2 2v8c0 1.103.897 2 2 2z"
					></path>
					<path d="M20 2H8c-1.103 0-2 .897-2 2h12c1.103 0 2 .897 2 2v8c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2z"></path>
				</svg>
				<p id="thread-title" class="thread-title">
					Create or select thread from the sidebar
				</p>
			</div>
			<div
				id="chat-api-select"
				class="chat-api-select"
				hx-get="http://127.0.0.1:8090/apis"
				hx-trigger="load, refresh-apis from:body"
				hx-target="this"
				hx-swap="innerHTML"
			></div>
		</div>
		<!-- fill message history here, stream responses -->
		<div class="messages-container" id="chat-messages"></div>
	</div>
}

templ ThreadListEntry(params ThreadListEntryParams, threadTags []TagParams, isNew bool) {
    <div
        id={ "thread-" + params.Id }
        class="thread-list-entry"
        hx-get={ "http://127.0.0.1:8090/thread/" + params.Id }
        hx-trigger="click"
        hx-target="#chat-messages"
        _={ "on click remove @disabled from #message-input " +
            "set $thread_id to" + "\"" + params.Id + "\" " + 
            "set #thread-id-chat.value to " + "\"" + params.Id + "\" " }
    >
        <svg
            hx-delete={ "http://127.0.0.1:8090/thread/" + params.Id }
            hx-trigger="click consume"
            hx-target={ "#thread-" + params.Id }
            hx-swap="outerHTML"
            hx-confirm="Delete thread and all associated messages?"
            class="delete-thread-icon"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            style="
                fill: rgba(0, 0, 0, 1);
                transform:;
                msfilter:;
            "
        >
            <path
                d="M6 7H5v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7H6zm10.618-3L15 2H9L7.382 4H3v2h18V4z"
            ></path>
        </svg>

        @ThreadTitle(params.Id, params.Title)
        <p class="thread-entry-model"> { params.Model } </p>

        <!-- <p class="thread-entry-message"> { params.LastMessage } </p> -->

        <div class="dual-timestamps-container">
            <p class="timestamp start">Created at: { types.DateTime.String(params.Created) } </p>
            <p id={ "last-updated-" + params.Id } class="timestamp end">Updated at: { types.DateTime.String(params.LastMessageTimestamp) } </p>
        </div>

        <div id={ "tags-" + params.Id } class="tags-container">
            <p
                hx-get={ "http://127.0.0.1:8090/thread/tag/" + params.Id }
                hx-trigger="click consume"
                hx-target={ "#tag-editor-" + params.Id }
                hx-swap="innerHTML"
                class="tag"
            >
                tag +
            </p>
            for _, tag := range threadTags {
                @Tag(params.Id, tag)
            }
        </div>
        <div id={ "tag-editor-" + params.Id }>

        </div>
    </div>
}

templ NewThreadListEntry(params ThreadListEntryParams) {
    <div
        id="sidebar-content"
        hx-swap-oob="afterbegin"
        _={ "init set $thread_id to " + "\"" + params.Id + "\" " + 
            "set #thread-title.innerText to " + "\"" + params.Id + "\" " +
            "set #thread-id-chat.value to " + "\"" + params.Id + "\" " +
            "remove @disabled from #message-input" }
    >
        @ThreadListEntry(params, []TagParams{}, true)
    </div>
    <div class="chat-window" id="chat-window" hx-swap-oob="outerHTML">
        <div class="chat-title-header">
            <div class="chat-header-left">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"><path d="M4 18h2v4.081L11.101 18H16c1.103 0 2-.897 2-2V8c0-1.103-.897-2-2-2H4c-1.103 0-2 .897-2 2v8c0 1.103.897 2 2 2z"></path><path d="M20 2H8c-1.103 0-2 .897-2 2h12c1.103 0 2 .897 2 2v8c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2z"></path></svg>
                <p id="thread-title" class="thread-title">{ params.Id }</p>
            </div>
            <div
                id="chat-api-select"
                class="chat-api-select"
                hx-get="http://127.0.0.1:8090/apis"
                hx-trigger="load, refresh-apis from:body"
                hx-target="this"
                hx-swap="innerHTML"
            ></div>
        </div>

        <div class="messages-container" id="chat-messages">

        </div>
    </div>
}

templ NewThreadListEntries(newThreadId string, threadParamsList []ThreadListEntryParams, allTags [][]TagParams) {
    for i, params := range threadParamsList {
        if i == 0 {
            @ThreadListEntry(params, allTags[i], true)
        } else {
            @ThreadListEntry(params, allTags[i], false)
        }
    }
    <div class="chat-window" id="chat-window" hx-swap-oob="outerHTML">
        <div class="chat-title-header">
            <div class="chat-header-left">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"><path d="M4 18h2v4.081L11.101 18H16c1.103 0 2-.897 2-2V8c0-1.103-.897-2-2-2H4c-1.103 0-2 .897-2 2v8c0 1.103.897 2 2 2z"></path><path d="M20 2H8c-1.103 0-2 .897-2 2h12c1.103 0 2 .897 2 2v8c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2z"></path></svg>
                <p id="thread-title" class="thread-title">{ newThreadId }</p>
            </div>
            <div
                id="chat-api-select"
                class="chat-api-select"
                hx-get="http://127.0.0.1:8090/apis"
                hx-trigger="load, refresh-apis from:body"
                hx-target="this"
                hx-swap="innerHTML"
            ></div>
        </div>

        <div class="messages-container" id="chat-messages">

        </div>
    </div>
}

templ ThreadListEntries(paramsList []ThreadListEntryParams, allTags [][]TagParams) {
    for i, params := range paramsList {
        @ThreadListEntry(params, allTags[i], false)
    }
}
