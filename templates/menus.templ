package templates

import (
    "strconv"
    "fmt"
)

type SideBarMenuParams struct {
    OpenAIKey string `db:"openai_key" json:"openai_key"`
    GroqKey string `db:"groq_key" json:"groq_key"`
}

templ SideBarMenu(params SideBarMenuParams) {
    <div 
        class="model-stats"
        hx-get="http://127.0.0.1:8090/stats"
        hx-target="this"
        hx-swap="innerHTML"
        hx-trigger="load"
    ></div>

    <div class="theme-config">
        <div class="theme-color-section">
            <label for="sidebar-color">Sidebar Color:</label>
            <input id="sidebar-color" class="theme-input" type="color" value="#b1b7bf"></input>
        </div>

        <div class="theme-color-section">
            <label for="sidebar-item-border-color">Sidebar Item Border Color:</label>
            <input id="sidebar-item-border-color" class="theme-input" type="color" value="#666666"></input>
        </div>

        <div class="theme-color-section">
            <label for="sidebar-hover-color">Sidebar Hover Color:</label>
            <input id="sidebar-hover-color" class="theme-input" type="color" value="#9a9fa6"></input>
        </div>

        <div class="theme-color-section">
            <label for="font-color">Font Color:</label>
            <input id="font-color" class="theme-input" type="color" value="#000000"></input>
        </div>

        <div class="theme-color-section">
            <label for="icon-color">Icon Color:</label>
            <input id="icon-color" class="theme-input" type="color" value="#000000"></input>
        </div>

        <div class="theme-color-section">
            <label for="icon-hover-color">Icon Hover Color:</label>
            <input id="icon-hover-color" class="theme-input" type="color" value="#7a8086"></input>
        </div>

        <div class="theme-color-section">
            <label for="add-tag-color">Add Tag Color:</label>
            <input id="add-tag-color" class="theme-input" type="color" value="gray"></input>
        </div>

        <div class="theme-color-section">
            <label for="tag-hover-color">Tag Hover Color:</label>
            <input id="tag-hover-color" class="theme-input" type="color" value="#b1c7ba"></input>
        </div>

        <div class="theme-color-section">
            <label for="text-input-color">Text Input Color:</label>
            <input id="text-input-color" class="theme-input" type="color" value="#ffffff"></input>
        </div>

        <div class="theme-color-section">
            <label for="send-button-color">Send Button Color:</label>
            <input id="send-button-color" class="theme-input" type="color" value="#ededf0"></input>
        </div>

        <div class="theme-color-section">
            <label for="gutter-gradient-color">Gutter Gradient Color:</label>
            <input id="gutter-gradient-color" class="theme-input" type="color" value="#67a843"></input>
        </div>

        <div class="theme-color-section">
            <label for="chat-background-color">Chat Background Color:</label>
            <input id="chat-background-color" class="theme-input" type="color" value="#b1c7ba"></input>
        </div>
        
        <div class="theme-color-section">
            <label for="chat-items-border-color">Chat Items Border Color:</label>
            <input id="chat-items-border-color" class="theme-input" type="color" value="#666666"></input>
        </div>

        <div class="theme-color-section">
            <label for="user-message-color">User Message Color:</label>
            <input id="user-message-color" class="theme-input" type="color" value="#c0d0c7"></input>
        </div>

        <div class="theme-color-section">
            <label for="model-message-color">Model Message Color:</label>
            <input id="model-message-color" class="theme-input" type="color" value="#b2c1b8"></input>
        </div>

        <div class="theme-color-section">
            <label for="chat-error-color">Chat Error Color:</label>
            <input id="chat-error-color" class="theme-input" type="color" value="#c68e8e"></input>
        </div>

        <div class="theme-color-section">
            <label for="disabled-chat-input">Disabled Chat Input:</label>
            <input id="disabled-chat-input" class="theme-input" type="color" value="#b1f7ba"></input>
        </div>

        <div class="theme-color-section">
            <label for="status-response-color">Status Response Color:</label>
            <input id="status-response-color" class="theme-input" type="color" value="#e6f0f0"></input>
        </div>

        <div class="theme-color-section">
            <label for="scrollbar-color">Scrollbar Color:</label>
            <input id="scrollbar-color" class="theme-input" type="color" value="#666666"></input>
        </div>

        <div class="theme-color-section">
            <label for="timestamp-color">Timestamp Color:</label>
            <input id="timestamp-color" class="theme-input" type="color" value="#393939"></input>
        </div>
        <div class="theme-buttons">
            <button
                id="reset-theme-button"
                class="reset-theme-button"
            >
                Reset theme
            </button>
        </div>
    </div>
}

css percentStyle(percent float64) {
	width: { fmt.Sprintf("%f%%", percent * 100.0) };
	border-radius: 5px;
	height: 8px;
	background-color: green;
}

templ ModelStatsViewer(sortedKeys []string, total map[string]int, useful map[string]int, percent map[string]float64) {
    for _, model := range sortedKeys { 
        if model != "error" && model != "" {
            <div class="model-stats-item">
                <p class="model-stats-title">{ model }</p>
                <div class="model-stats-row">
                    <p class="model-stats-text">Total messages: </p>
                    <p class="model-stats-text">{ strconv.Itoa(total[model]) }</p>
                </div> 
                <div class="model-stats-row">
                    <p class="model-stats-text">Useful messages: </p>
                    if _, ok := useful[model]; ok {
                        <p class="model-stats-text">{ strconv.Itoa(useful[model]) }</p>
                    } else {
                        <p class="model-stats-text">0</p> 
                    }
                </div>
                <div style="background-color: black; width: 100%; border-radius: 5px; height: 8px; margin-top: 0.25rem;">
                    <div class={ percentStyle(percent[model]) }></div>
                </div>
            </div>
        }
    }
}

templ SettingsUpdated() {
    <p class="update-alert" _="on load wait 2s remove me">Settings updated successfully!</p>
}

templ SearchMenu(tagParams []TagParams, models []string) {
    <div id="side-bar-menu">
        <form
            hx-post="http://127.0.0.1:8090/search"
            hx-target="#search-results"
            hx-swap="innerHTML"
            id="side-bar-menu"
            class="search-menu"
        >
            <div class="search-text-row">
                <label class="search-input-label">Search:</label>
                <input name="search-input" class="search-input"/>
            </div>

            <select class="search-filter" name="tag">
                <option value="any">All tags</option>
                for _, tag := range tagParams {
                    <option value={ tag.Id }> { tag.Value } </option>
                }
            </select>

            <select class="search-filter" name="model">
                <option value="any">All used models</option>
                for _, model := range models {
                    <option value={ model }> { model } </option>
                }
            </select>

            <select class="search-filter" name="useful">
                <option value="any">Any usefulness</option>
                <option value="useful">Only threads with useful messages</option>
                <option value="not-useful">Only threads without useful messages</option>
            </select>

            <button
                class="submit-search-button"
            >
                Search
            </button>
        </form>
        <div id="search-results"/>
    </div>
}
